<!DOCTYPE html>
<html>
<head>
    <title>按机构统计校验结果</title>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/Content/amaze/css/amazeui.min.css">
    <link href="@(Url.Content("~/Content/global.css"))" rel="stylesheet" />
    <style type="text/css">
        html{
            font-size: 54.6875%; /*10 ÷ 16 × 100% = 62.5%*/
        }
        .selectedHight .am-btn, .popmodelpanel .am-btn {
            padding: 0.695em 1em;
        }
        .popmodelpanel input {
            width: 80%;
        }
        .popmodelpanel .am-btn {
            background: none;
        }
        #DateBegin .am-btn {
            border-color: #ccc;
            background: #e6e6e6;
        }
        .am-datepicker-dropdown {
            z-index: 198910161;
        }
        .split {
            width: 100%;
            height: 20px;
            background: #fff;
        }
        .labelFormat{
            line-height: 33px;
            margin-bottom: 0px;
        }
        .am-datepicker{
            -webkit-box-shadow: none;
            box-shadow: none;
        }
    </style>
</head>
<body>
    <div class="admin-content">
        <div class="admin-content-body">
            <div class="am-cf am-padding am-padding-bottom-0">
                <div class="am-fl am-cf"><strong class="am-text-primary am-text-lg">数据校验</strong> / <small v-text="title"></small></div>
            </div>
            <hr>
        </div>
        <transition mode="out-in">
            <router-view></router-view>
        </transition>
    </div>
</body>
<!-- 模板 -->
<script type="text/template" id="template-list">
    <div class="am-tab-panel">
        <!-- 下拉组 -->
        <div class="selected-wrapper">
            <div class="am-g">
                <div class="am-u-sm-3 selectedHight">
                    <div class="am-form-group">
                        <label class="am-u-sm-3 am-form-label am-text-default labelFormat">机构选择:</label>
                        <div class="am-u-sm-9">
                            <laiq-select valuekey="id" labelkey="text" btnwidth="100%" maxheight="155" search-Box v-bind:model="SelectMechanismLists" v-model="SelectedMechanism"></laiq-select>
                        </div>
                    </div>
                </div>
                <div class="am-u-sm-3 selectedHight">
                    <div class="am-form-group">
                        <label class="am-u-sm-3 am-form-label am-text-default labelFormat">考试年份:</label>
                        <div class="am-u-sm-9">
                            <laiq-select valuekey="id" labelkey="text" btnwidth="100%" maxheight="155" search-Box v-bind:model="GetYearLists" v-model="SelectedYear"></laiq-select>
                        </div>
                    </div>
                </div>
                <div class="am-u-sm-5"></div>
                <div class="am-u-sm-1">
                    <div class="am-input-group am-input-group-sm">
                        <span class="am-input-group-btn">
                            <button class="am-btn am-btn-default" type="button" v-on:click="ExportFun">
                                <i class="am-icon-file-excel-o"></i>
                                导 出
                            </button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <!-- 仅占位置 -->
        <div class="split"></div>
        <div class="am-g">
            <div class="am-u-sm-12">
                <table class="am-table am-table-striped am-table-hover table-main">
                    <thead>
                        <tr>
                            <th>考试代码</th>
                            <th>考试名称</th>
                            <th>考试年月</th>
                            <th>报考数</th>
                            <th>参考数</th>
                            <th>合格数</th>
                            <th>是否通过</th>
                            <th>下载人</th>
                            <th>下载人手机号</th>
                            <th>下载日期</th>
                            <th>上传日期</th>
                            <th>上传人</th>
                            <th>操作</th>
                            
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(item,$index) in GridListsData" v-bind:value="item.CustomerID">
                            <td>{{item.dc_areacode}}</td>
                            <td>{{item.dc_areaname}}</td>
                            <td>{{item.ksny}}</td>
                            <td>{{item.baokao}}</td>
                            <td>{{item.cankao}}</td>
                            <td>{{item.hege}}</td>
                             <td v-if="item.isUploadComp == '未上传'"><span style="color:#000000;font-size: 14px;">×</span></td>
                            <td v-else-if="item.isUploadComp == '正常上传'"><span style="color:#00ff33;font-size: 14px;">√</span></td>
                            <td v-else-if="item.isUploadComp == '超时上传'"><span style="color:#FF0031;font-size: 14px;">√</span></td>
                            <td>{{item.downper}}</td>
                            <td>{{item.downpermobile}}</td>
                            <td>{{item.downDate}}</td>
                            <td>{{item.uploadDate}}</td>
                            <td>{{item.uploadper}}</td>
                            <td>{{item.uploaduser}}</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <!-- 分页设置 -->
        <div class="am-tab-panel">
            <div class="am-topbar am-cf am-topbar-fixed-bottom" style="padding-top: 12px;">
                <div class="am-u-sm-12">
                    共 <span v-text="totle"></span> 条记录
                    <div class="am-fr">
                        <div id="page"></div>
                    </div>
                </div>
            </div>
        </div>
</script>
<!-- js 引用 -->
<script type="text/javascript" src="/Scripts/jquery-1.12.0.min.js"></script>
<script type="text/javascript" src="/Content/amaze/js/amazeui.min.js"></script>
<script type="text/javascript" src="/Scripts/laypage/laypage.js"></script>
<script type="text/javascript" src="/Scripts/layer/layer.js"></script>
<script type="text/javascript" src="/Content/vue/vue-2.1.6.min.js"></script>
<script type="text/javascript" src="/Content/vue/vue-router.min.js"></script>
<script type="text/javascript" src="/Content/vue/laiqui/laiqui.min.js"></script>
<script type="text/javascript" src="/Scripts/lodash.min.js"></script>
<script>
    // 整体上的数据逻辑结构是：
    // 1、打开页面首先加载机构选择；
    // 2、选择机构后加载考试年份下拉数据列表；
    // 3、加载列表数据
    // 4、最后导出
    var darta
    // 管理员公告Vue实例
    var ListPage = Vue.extend({
        template: '#template-list',
        watch: {
            // 监听选择机构触发事件
            SelectedMechanism: function (val, oldVal) {
                var _this = this;
                _this.SelectMechanismId = val;
                if(_this.SelectMechanismId != null){
                    // 年份加载函数
                    _this.GetYearsFun();
                }
            },
            // 监听年份选择事件
            SelectedYear: function (val, oldVal) {
                var _this = this;
                _this.SelectYearId = val;
                // 列表调用函数
                _this.GetListsFun();
            }
        },
        data: function () {
            return {
                GridListsData: [],
                totle: 0,
                count: 0, 
                SelectMechanismLists: [],
                SelectMechanismId: '', // 获取选中机构名称对应ID
                SelectedMechanism: '', // 判断 “选择机构” 下拉列表是否是单选, v-model对应的值, 单选为number,  多选为Array;
                GetYearLists: [], // 获取年份下拉列表数据
                SelectYearId: '', // 获取选中年份对应ID
                SelectedYear: '' // 判断 “选择年份” 下拉列表是否是单选, v-model对应的值, 单选为number,  多选为Array;
            }
        },
        methods: {
            // 获取选择机构列表数据
            GetMechanismFun: function () {
                layer.msg('数据加载中...', { icon: 16, time: 0, shade: [0.1, 'white'] });
                var _this = this;
                $.post("/datacheck/dc_tol_ora/getjigou", { page: 1, start: 0, limit: 25}, function (data) {
                    //  _.uniq(data,'id'),此方法依赖lodash.min.js这个js插件，但是这个插件是独立的，不依赖jq，这里主要是处理json数据的去重
                    // 例：
                    // _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
                    // => [{ 'x': 1 }, { 'x': 2 }]
                    _this.SelectMechanismLists = _.uniq(data,'id');
                    layer.closeAll();
                }, "json");
            },
            // 获取年份列表数据
            GetYearsFun: function () {
                layer.msg('数据加载中...', { icon: 16, time: 0, shade: [0.1, 'white'] });
                var _this = this;
                $.post("/datacheck/dc_tol_ora/getksndByjigou", { page: 1, start: 0, limit: 25,kscode:_this.SelectMechanismId}, function (data) {
                    //  _.uniq(data,'id'),此方法依赖lodash.min.js这个js插件，但是这个插件是独立的，不依赖jq，这里主要是处理json数据的去重
                    // 例：
                    // _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
                    // => [{ 'x': 1 }, { 'x': 2 }]
                    _this.GetYearLists = _.uniq(data,'id');
                    layer.closeAll();
                }, "json");
            },
            // 列表数据加载
            GetListsFun: function () {
                layer.msg('数据加载中...', { icon: 16, time: 0, shade: [0.1, 'white'] });
                var _this = this;
                $.post("/datacheck/dc_tol_ora/tolora_list", {
                    page: 1,
                    start: 0,
                    limit: 10,
                    ksny: _this.SelectYearId,
                    kscode: _this.SelectMechanismId
                }, function (data) {
                    _this.GridListsData = data.data;
                    _this.totle = data.total;
                    // 为每个对象设置是否选中
                    if (_this.GridListsData !== null) {
                        for (var i = 0; i < _this.GridListsData.length; i++) {
                            data.data[i].CheckItem = false;
                        }
                        _this.count = Math.ceil(_this.totle / 10);
                        if (_this.count > 1) {
                            $("#page").show();
                            laypage({
                                cont: "page", pages: _this.count, groups: 5, skin: "#1E9FFF", jump: function (obj, first) {
                                    if (!first) {
                                        $.post("/datacheck/dc_tol_ora/tolora_list", { page: obj.curr, start: 0, limit: 10, ksny: _this.SelectYearId, kscode: _this.SelectMechanismId}, function (data) {
                                            _this.GridListsData = data.data;
                                            _this.count = data.total;
                                        }, "json");
                                    }
                                }
                            });
                        } else {
                            // 小于1页或者没有数据的情况下不显示分页
                            $("#page").hide();
                        }
                        layer.closeAll();
                    } else {
                        layer.alert('暂无此次搜索项内容', {
                            icon: 5,
                            title: '提示',
                            skin: 'layer-ext-moon'
                        })
                    }
                }, "json");
            },
            // 批量导出文件
            ExportFun: function () {
                var _this = this;
                if(_this.SelectMechanismId == null || _this.SelectMechanismId == ''){
                    layer.alert('请选择所属机构！', {
                        icon: 5,
                        title: '提示',
                        skin: 'layer-ext-moon'
                    })
                }else if(_this.SelectYearId == null || _this.SelectYearId == ''){
                    layer.alert('请选择考试年份！', {
                        icon: 5,
                        title: '提示',
                        skin: 'layer-ext-moon'
                    })
                }else{
                    var url = 'http://kwt.cpta.com.cn/sms/DownDataExcel/Downdc_tol_oraExcel?t=' + Date.parse(new Date()) / 1000 + '&kscode=' + _this.SelectMechanismId + '&ksny=' + _this.SelectYearId;
                    var ja = [];
                    var jo = { 'Id': 'thisId_dc_tol_exam', 'Name': _this.SelectYearId + "_" + _this.SelectMechanismId + "校验结果.xls", 'Size': '-', 'IsOss': false, 'Url': url };
                    ja.push(jo);
                    jsObj.nodeAction(JSON.stringify(ja), 1);
                }
            },
            initSelectDate: function () {
                var _this = this;
            }
        },
        mounted: function () {
            var _this = this;
            // 选择机构加载函数
            _this.GetMechanismFun();
            // 下拉初始化
            // _this.initSelectDate();
        }
    })

    const routes = [
        { path: "/ListPage", component: ListPage, name: "ListPage" },
        //{ path: "/DQListPage", component: DQListPage, name: "DQListPage" }
        // { path: "/StatisticsPage", component: StatisticsPage, name: "StatisticsPage" }
    ];
    const router = new VueRouter({ routes: routes });
    var app = new Vue({
        router: router,
        data: {
            title: "按机构统计校验结果"
        },
        beforeCreate: function () {
            router.push("ListPage");
        },
        mounted: function () {
        },
        methods: {
        }
    }).$mount(".admin-content");

    // 时间date对象初始化
    Date.prototype.format = function (format) {
        var o = {
            "M+": this.getMonth() + 1, // month
            "d+": this.getDate(), // day
            "h+": this.getHours(), // hour
            "m+": this.getMinutes(), // minute
            "s+": this.getSeconds(), // second
            "q+": Math.floor((this.getMonth() + 3) / 3), // quarter
            "S": this.getMilliseconds()
            // millisecond
        };
        if (/(y+)/.test(format)) {
            format = format.replace(RegExp.$1, (this.getFullYear() + "").substr(4
                            - RegExp.$1.length));
        }
        for (var k in o) {
            if (new RegExp("(" + k + ")").test(format)) {
                format = format.replace(RegExp.$1, RegExp.$1.length === 1
                                ? o[k]
                                : ("00" + o[k]).substr(("" + o[k]).length));
            }
        }
        return format;
    };

</script>
</html>